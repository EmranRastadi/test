{"version":3,"sources":["_Service/Routing/index.js","App.js","reportWebVitals.js","index.js"],"names":["Route","Home","lazy","Promise","resolve","setTimeout","memo","component","path","exact","App","fallback","Routing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAG0BA,E,uDAWpBC,GAXoBD,EAWF,mDAVFE,gBAAK,WACnB,OAAO,IAAIC,SAAQ,SAACC,GAChBC,YAAW,WACPD,EAAQJ,KACT,YAaAM,kBAAK,WAChB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,UAAWN,EAAMO,KAAM,IAAKC,OAAK,IACxC,cAAC,IAAD,CAAOF,UAAWN,EAAMO,KAAM,gBCV3BE,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,kBAAM,+CAA1B,SACE,cAACC,EAAD,SCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.89fb742f.chunk.js","sourcesContent":["import React , {lazy , memo} from 'react';\nimport {Route , Redirect, Switch} from 'react-router-dom';\n\nexport const createLazy = Route => {\n    const component = lazy(() => {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(Route);\n            }, 1000)\n        })\n    })\n    return component;\n}\n\nconst Home = createLazy(import('../../_Views/Home'));\n// const NotFound = createLazy(import('../../Views/NotFound'));\n\n\n// We can create a function for each type of root here\n// liked Private , Public , ... => check by token\n\nexport default memo(()=>{\n    return (\n        <Switch>\n            <Route component={Home} path={\"/\"} exact />\n            <Route component={Home} path={\"/home\"} />\n            {/* <Route component{NotFound} path={\"*\"} /> */}\n        </Switch>\n    )\n})","import React, { Suspense } from \"react\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n// import './App.css';\nimport Routing from \"./_Service/Routing\";\n\nfunction App() {\n  return (\n    <Router>\n      <Suspense fallback={() => <div>loading ...</div>}>\n        <Routing />\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}